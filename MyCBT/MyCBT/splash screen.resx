<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>